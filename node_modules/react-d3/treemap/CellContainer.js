'use strict';

var React = require('react');
var shade = require('../utils').shade;
var define = require('../utils').define;
var Cell = require('./Cell');


module.exports = React.createClass({

  displayName: 'CellContainer',

  propTypes: {
    fill: React.PropTypes.string,
    label: React.PropTypes.string
  },

  getInitialState:function() {
    console.log('this is initial: ', this.props);
    return {
      // fill is named as fill instead of initialFill to avoid
      // confusion when passing down props from top parent
      fill: this.props.fill,
      label: this.props.label,
      value: this.props.value
    };
  },


  render:function() {

    var props = this.props;

    return (
      React.createElement(Cell, React.__spread({},
        props,
        {fill: this.state.fill, label: this.state.label, value: this.state.value,
        handleMouseOver: props.hoverAnimation ? this._animateCell : null,
        handleMouseLeave: props.hoverAnimation ? this._restoreCell : null})
      )
    );
  },

  _animateCell:function() {
    this.setState({
      fill: shade(this.props.fill, 0.05),
      label: define(this.props.label)
    });
    //console.log('props is: ', this.props);
    //console.log('label is: ', this.props.label);
  },

  _restoreCell:function() {
    this.setState({
      fill: this.props.fill,
      label: this.props.label
    });
  }
});
